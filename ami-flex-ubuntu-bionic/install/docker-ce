#!/usr/bin/env bash

# Install Docker CE
## Set up the repository:
sudo apt-get update && \
  sudo apt-get upgrade -y && \
  sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

## Add Dockerâ€™s official GPG key:
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

## Add Docker apt repo:
sudo add-apt-repository \
  "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) \
  stable"

## Install Docker CE:
sudo apt-get update && \
  sudo apt-get install -y docker-ce="${version_docker_ce}"

## Setup Docker customized daemon (TODO: Make parameterized beyond Kubernetes):
cat << EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

sudo mkdir -p /etc/systemd/system/docker.service.d

# Add Docker permissions (TODO: Make parameterized):
sudo groupadd docker
sudo usermod -aG docker ubuntu

# Enable the Docker service:
sudo systemctl daemon-reload
sudo systemctl restart docker
sudo systemctl enable docker


# Ensure that any custom Docker config.json files exists before pulling images:
if [ -z "${docker_image_pulls}" ] ||  [ -z "${docker_pull_config}" ]; then
  echo "FLEXBUILD: No docker config.json file has been configured."
else
  echo "FLEXBUILD: Docker config.json provided. Writing to \"${HOME}/.docker/config.json\" "
    mkdir -p ${HOME}/.docker/;
    echo ${docker_pull_config} > ~/.docker/config.json;
fi

# Pull any docker images that have been declared in .packer:
if [ -z "${docker_image_pulls}" ]; then
  echo "FLEXBUILD: No Docker images have been declared for pre-pull."
else
  echo "FLEXBUILD: Docker images have been declared. Pulling these images now... "
  for i in ${docker_image_pulls[*]}; do
    sudo docker pull $i;
  done
  echo "FLEXBUILD: Summary of preloaded Docker images \n"
  sudo docker images
fi

# If requested, remove any Docker config.json files that may have been provided:
if [ "${docker_pull_config_purge}" == true ]; then
  echo "FLEXBUILD: Administrator requested to purge \"${HOME}/.docker/config.json\". Removing... "
    rm -rf ${HOME}/.docker/config.json
else
  echo "FLEXBUILD: Administrator requested to preserve \"${HOME}/.docker/config.json\". Nothing to do."
fi
